package ma.fstm.ilisi2.projects.biblio.model.bo;
// Generated 13 mars 2023 18:19:30 by Hibernate Tools 4.3.1



import org.hibernate.annotations.ColumnDefault;

import javax.persistence.*;
import java.time.LocalDate;
import java.util.Date;

/**
 * Emprunt generated by hbm2java
 */
@Entity
@Table(name="EMPRUNT"
    ,schema="HR"
)
public class Emprunt  implements java.io.Serializable {


     private Integer idEmp;
     private Exemplaire exemplaire;
     private Adherent adherent;
     private Date dateEmp;
     private LocalDate dateRet;
     private Integer status;

    public Emprunt() {
    }

    public Emprunt(Exemplaire exemplaire, Adherent adherent, Date dateEmp) {
       this.exemplaire = exemplaire;
       this.adherent = adherent;
       this.dateEmp = dateEmp;
       this.status = 0;
    }
   
    @Id
    @Column(name="ID_EMP", unique=true, nullable=false, precision=22, scale=0)
    @SequenceGenerator(name="EMPRUNT_SEQ",sequenceName="EMPRUNT_SEQ", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "EMPRUNT_SEQ")
    public Integer getIdEmp() {
        return this.idEmp;
    }
    
    public void setIdEmp(Integer idEmp) {
        this.idEmp = idEmp;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="ID_EXEMP", nullable=false)
    public Exemplaire getExemplaire() {
        return this.exemplaire;
    }
    
    public void setExemplaire(Exemplaire exemplaire) {
        this.exemplaire = exemplaire;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="ID_CLIENT", nullable=false)
    public Adherent getAdherent() {
        return this.adherent;
    }
    
    public void setAdherent(Adherent adherent) {
        this.adherent = adherent;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DATE_EMP", nullable=false, length=7)
    public Date getDateEmp() {
        return this.dateEmp;
    }
    
    public void setDateEmp(Date dateEmp) {
        this.dateEmp = dateEmp;
    }

    @Transient
    public LocalDate getDateRet() {
        return dateRet;
    }

    @PostLoad()
    public void setDateRet() {
        this.dateRet = LocalDate.parse(this.dateEmp.toString()).plusDays(15);
    }

    @ColumnDefault(value="0")
    @Column(name="STATUS", nullable=false, precision=22, scale=0)
    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }
}


